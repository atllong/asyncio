#ifndef SYNCHRONIZATION_H
#define SYNCHRONIZATION_H

#include <pthread.h>

typedef pthread_rwlock_t		ASYNCIO_RWLOCK_T
#define ASYNCIO_RWLOCK_INITIALIZER	PTHREAD_RWLOCK_INITIALIZER

typedef pthread_mutex_t			ASYNCIO_MUTEX_T
#define ASYNCIO_MUTEX_INITIALIZER	PTHREAD_MUTEX_INITIALIZER

typedef pthread_cond_t			ASYNCIO_COND_T
#define ASYNCIO_COND_INITIALIZER	PTHREAD_COND_INITIALIZER

int ASYNCIO_RWLOCK_INIT(ASYNCIO_RWLOCK_T *lock);
int ASYNCIO_RWLOCK_WRLOCK(ASYNCIO_RWLOCK_T *lock);
int ASYNCIO_RWLOCK_RDLOCK(ASYNCIO_RWLOCK_T *lock);
void ASYNCIO_RWLOCK_UNLOCK(ASYNCIO_RWLOCK_T *lock);
void ASYNCIO_RWLOCK_DESTROY(ASYNCIO_RWLOCK_T *lock);

int ASYNCIO_MUTEX_INIT(ASYNCIO_MUTEX_T *mtx);
int ASYNCIO_MUTEX_LOCK(ASYNCIO_MUTEX_T *mtx);
void ASYNCIO_MUTEX_UNLOCK(ASYNCIO_MUTEX_T *mtx);
void ASYNCIO_MUTEX_DESTROY(ASYNCIO_MUTEX_T *mtx);

int ASYNCIO_COND_INIT(ASYNCIO_COND_T *cond);
int ASYNCIO_COND_WAIT(ASYNCIO_COND_T *cond, ASYNCIO_MUTEX_T *mtx);
void ASYNCIO_COND_SIGNAL(ASYNCIO_COND_T *cond);
void ASYNCIO_COND_BROADCAST(ASYNCIO_COND_T *cond);
void ASYNCIO_COND_DESTROY(ASYNCIO_COND_T *cond);

#endif
